'use strict';

var lodash = require('lodash');

module.exports = function(grunt) {

    // Initial config
    var config = {

        // Read JSON files
        pkg: grunt.file.readJSON('package.json'),

        // Concat files banner
        banner: 'DO NOT EDIT THIS FILE! It is automatically generated by Grunt.',

        // App variables
        app: {
            src: 'app',
            dest: 'dest',
            public: 'public',
            sass: 'sass',
            css: 'css',
            img: 'img'
        }
    };

    // Tasks options
    var tasks = {

        compass: {
            dest: {
                options: {
                    sassDir: '<%= app.public %>/<%= app.sass %>',
                    cssDir: '<%= app.public %>/<%= app.css %>',
                    imagesDir: '<%= app.public %>/<%= app.img %>',
                    environment: 'development'
                }
            }
        },

        concat: {
            collections: {
                options: {
                    banner: '/* ' + config.banner + ' */\n'
                },
                files: {
                    '<%= app.src %>/collections.js': [
                        '<%= app.src %>/collections/*.js'
                    ]
                }
            },
            models: {
                options: {
                    banner: '/* ' + config.banner + ' */\n'
                },
                files: {
                    '<%= app.src %>/models.js': [
                        '<%= app.src %>/models/*.js'
                    ]
                }
            },
            routers: {
                options: {
                    banner: '/* ' + config.banner + ' */\n'
                },
                files: {
                    '<%= app.src %>/routers.js': [
                        '<%= app.src %>/routers/*.js'
                    ]
                }
            },
            templates: {
                options: {
                    banner: '    <!-- ' + config.banner + ' -->\n'
                },
                files: {
                    '<%= app.src %>/templates.html': [
                        '<%= app.src %>/templates/*.html'
                    ]
                }
            },
            views: {
                options: {
                    banner: '/* ' + config.banner + ' */\n'
                },
                files: {
                    '<%= app.src %>/views-list.js': [
                        '<%= app.src %>/views/*-list.js'
                    ],
                    '<%= app.src %>/views.js': [
                        '!<%= app.src %>/views/*-list.js',
                        '<%= app.src %>/views/*.js'
                    ]
                }
            }
        },

        concurrent: {
            serverWatch: {
                tasks: ['exec:jsonServer', 'watch'],
                options: {
                    logConcurrentOutput: true
                }
            }
        },

        exec: {
            jsonServer: 'json-server db.json'
        },

        replace: {
            templates: {
                options: {
                    processTemplates: false
                },
                src: ['index.html'],
                overwrite: true,
                replacements: [{
                    from: /<!-- Templates -->[\s\S]*<!-- END Templates -->/g,
                    to: function() {
                        return '<!-- Templates -->\n' + grunt.file.read('app/templates.html') + '\n    <!-- END Templates -->';
                    }
                }]
            }
        },

        watch: {
            all: {
                files: [
                    '<%= app.src %>/collections/**/*',
                    '<%= app.src %>/libs/**/*',
                    '<%= app.src %>/models/**/*',
                    '<%= app.src %>/routers/**/*',
                    '<%= app.src %>/templates/**/*',
                    '<%= app.src %>/views/**/*',
                    '<%= app.src %>/app.js',
                    '<%= app.src %>/init.js',
                    '<%= app.src %>/helpers.js',
                    '<%= app.public %>/<%= app.sass %>/**/*',
                ],
                tasks: ['build']
            }
        }

    };

    // Merge tasks options with config
    lodash.merge(config, tasks);

    require('load-grunt-tasks')(grunt);

    // Default task
    grunt.registerTask('default', 'Default grunt task', function() {
        grunt.task.run(['concurrent:serverWatch']);
    });

    // Build task
    grunt.registerTask('build', 'Build grunt task', function() {
        grunt.task.run(['compass', 'concat', 'replace']);
    });

    // Load grunt config
    grunt.initConfig(config);

    // Load all npm tasks at once
    require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);

};
